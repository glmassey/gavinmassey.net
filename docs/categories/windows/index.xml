<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windows on gavinmassey.net</title>
    <link>https://gavinmassey.net/categories/windows/</link>
    <description>Recent content in Windows on gavinmassey.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Dec 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://gavinmassey.net/categories/windows/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Active Directory Domain Services (ADDS) Management</title>
      <link>https://gavinmassey.net/articles/2023/adds-management/</link>
      <pubDate>Wed, 20 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://gavinmassey.net/articles/2023/adds-management/</guid>
      <description>Introduction Active Directory Domain Services (ADDS) is a foundational aspect of managing Windows-based networks, offering robust tools for managing users, computers, and other resources within an organization. This comprehensive guide delves into various key aspects of ADDS management, providing insights and practical instructions on how to efficiently use command line tools, PowerShell, and the Best Practices Analyzer (BPA) to maintain and optimize your Active Directory environment.&#xA;Firstly, we explore how to check for replication errors in your Active Directory environment, using both command line tools like dcdiag and repadmin, and PowerShell commands.</description>
    </item>
    <item>
      <title>Domain Controller vs Global Catalog in Active Directory</title>
      <link>https://gavinmassey.net/articles/2023/global-catalog/</link>
      <pubDate>Wed, 20 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://gavinmassey.net/articles/2023/global-catalog/</guid>
      <description>In Microsoft&amp;rsquo;s Active Directory (AD), Domain Controllers (DCs) and Global Catalogs (GCs) are crucial components, each with distinct roles and functions.&#xA;Domain Controller (DC) Primary Role: Handles authentication, authorization, and directory services within its domain. Data Scope: Manages the full Active Directory database for its domain, containing detailed information for each object. Functionality: Responds to security authentication requests, manages user and computer accounts, and enforces security policies. Replication: Every DC can update the directory and replicate changes to other DCs, ensuring network-wide consistency.</description>
    </item>
    <item>
      <title>Managing Domain Controllers With PowerShell</title>
      <link>https://gavinmassey.net/articles/2023/managing-domain-controllers-with-powershell/</link>
      <pubDate>Wed, 20 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://gavinmassey.net/articles/2023/managing-domain-controllers-with-powershell/</guid>
      <description>Important considerations Before making any changes to ADDS, make sure dependent network services such as DNS and DHCP will not be affected. Alway create a backup before making any changes. How do you verify which domain controller has the FSMO roles # Verifying FSMO Roles Assignment # Import Active Directory module # This module is necessary to run Active Directory-related cmdlets Import-Module ActiveDirectory # Retrieve domain information # This command gets information about the current domain $domain = Get-ADDomain # Retrieve forest information # This command gets information about the forest $forest = Get-ADForest # Display FSMO roles for the domain # PDCEmulator, RIDMaster, and InfrastructureMaster roles are domain-specific Write-Host &amp;#34;Domain FSMO Roles:&amp;#34; Write-Host &amp;#34;PDC Emulator: $($domain.</description>
    </item>
    <item>
      <title>Securing Active Directory Domain Services</title>
      <link>https://gavinmassey.net/articles/2023/securing-adds/</link>
      <pubDate>Wed, 20 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://gavinmassey.net/articles/2023/securing-adds/</guid>
      <description>Securing Active Directory Domain Services (ADDS) is a critical component of maintaining the integrity and security of an organization&amp;rsquo;s IT infrastructure. This guide provides a comprehensive overview of key security practices and configurations necessary for safeguarding your ADDS environment.&#xA;Implementing Strong Password Policies with PSO Understanding PSOs (Password Settings Objects): PSOs are essential for defining password policies specific to user or group accounts in Active Directory. They enable the enforcement of unique password policies that may differ from the domain&amp;rsquo;s default settings.</description>
    </item>
    <item>
      <title>Setting up PowerShell Remoting</title>
      <link>https://gavinmassey.net/articles/2023/setting-up-remote-powershell/</link>
      <pubDate>Wed, 20 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://gavinmassey.net/articles/2023/setting-up-remote-powershell/</guid>
      <description>1. On the Remote Host Enable PowerShell Remoting: You can enable PowerShell Remoting on the remote host by running the following command in an elevated PowerShell session (Run as Administrator):&#xA;Enable-PSRemoting -Force Allow Incoming Connections: Ensure that the Windows Firewall (or any other firewall software you may be using) allows incoming connections for PowerShell Remoting. If using the Windows Firewall, this command will help:&#xA;Set-NetFirewallRule -Name WINRM-HTTP-In-TCP -RemoteAddress Any 2. On the Client Machine (from where you want to initiate the connection) Trust the Remote Host: If your remote host is not part of a domain or the certificate used by the remote host is not trusted, you need to add the remote host to your list of trusted hosts:</description>
    </item>
    <item>
      <title>Steps to Add &#34;Open PowerShell as Administrator&#34; to Context Menu</title>
      <link>https://gavinmassey.net/articles/2023/create-open-powershell-as-admin-context-entry-windows-explorer/</link>
      <pubDate>Wed, 20 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://gavinmassey.net/articles/2023/create-open-powershell-as-admin-context-entry-windows-explorer/</guid>
      <description>Update Registry Open Registry Editor:&#xA;Press Win + R to open the Run dialog. Type regedit and press Enter. If prompted by User Account Control (UAC), click Yes to continue. Navigate to the Context Menu Key:&#xA;In the Registry Editor, navigate to the following key:&#xA;HKEY_CLASSES_ROOT\Directory\Background\shell You can copy and paste this path into the Registry Editor&amp;rsquo;s address bar.&#xA;Create a New Key for the PowerShell Prompt:&#xA;Right-click on shell, select New &amp;gt; Key, and name it Open PowerShell here as Administrator.</description>
    </item>
    <item>
      <title>Why are DNS settings configured per interface?</title>
      <link>https://gavinmassey.net/articles/2023/why-different-dns-per-network-interface/</link>
      <pubDate>Wed, 20 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://gavinmassey.net/articles/2023/why-different-dns-per-network-interface/</guid>
      <description>It is kind of complicated&amp;hellip;&#xA;In today&amp;rsquo;s interconnected world, efficient network management and configuration are crucial for maintaining robust and secure IT systems. One aspect of network configuration that often raises questions is the rationale behind setting up individual DNS (Domain Name System) configurations for each network interface. This practice, though seemingly complex, caters to the nuanced needs of diverse network environments â€“ from simple home setups to intricate corporate networks.</description>
    </item>
    <item>
      <title>WIM and CIM Lab Exercises</title>
      <link>https://gavinmassey.net/articles/2023/cim-lab-exercises/</link>
      <pubDate>Wed, 20 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://gavinmassey.net/articles/2023/cim-lab-exercises/</guid>
      <description>Lab Exercise 1: System Overview Objective: Get an overview of your computer system&amp;rsquo;s properties.&#xA;Task: Retrieve information about the operating system, including its version, last boot up time, and the number of users currently logged on.&#xA;Command Hint: Get-CimInstance -ClassName CIM_OperatingSystem Task: Fetch the computer&amp;rsquo;s name, manufacturer, model, and the total physical memory.&#xA;Command Hint: Get-CimInstance -ClassName Win32_ComputerSystem Lab Exercise 2: Disk Analysis Objective: Analyze the disk space usage and health.</description>
    </item>
    <item>
      <title>Configure Windows Server Core Domain Controller</title>
      <link>https://gavinmassey.net/articles/2023/setting-up-server-core-dc/</link>
      <pubDate>Tue, 19 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://gavinmassey.net/articles/2023/setting-up-server-core-dc/</guid>
      <description># Install vmware tools if not installed setup64.exe /s /v&amp;#34;/qn REBOOT=R&amp;#34; # Change the hostname and reboot Rename-Computer -NewName &amp;#39;NewComputerName&amp;#39; Restart-Computer # Remove the old ip address Remove-NetIPAddress -InterfaceAlias &amp;#39;Ethernet0&amp;#39; # Also you might have to remove the default gateway Remove-NetRoute -InterfaceAlias &amp;#39;Ethernet0&amp;#39; -NextHop 10.0.0.2 # Now you can add the new IP Address New-NetIPAddress ` -InterfaceAlias &amp;#39;Ethernet0&amp;#39; ` -IPAddress &amp;#39;10.0.77.104&amp;#39; ` -PrefixLength 24 ` -DefaultGateway &amp;#39;10.0.77.1&amp;#39; # You will also need to set the DNS address Set-DnsClientServerAddress ` -InterfaceAlias &amp;#39;Ethernet0&amp;#39; ` -ServerAddresses &amp;#39;10.</description>
    </item>
    <item>
      <title>Configuring a DHCP Scope With Windows PowerShell</title>
      <link>https://gavinmassey.net/articles/2023/configureing-dhcp-with-powershell/</link>
      <pubDate>Tue, 19 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://gavinmassey.net/articles/2023/configureing-dhcp-with-powershell/</guid>
      <description># Define scope parameters $scopeName = &amp;#34;ExampleScope&amp;#34; $startRange = &amp;#34;192.168.1.10&amp;#34; # Starting IP address of the scope $endRange = &amp;#34;192.168.1.100&amp;#34; # Ending IP address of the scope $subnetMask = &amp;#34;255.255.255.0&amp;#34; $gateway = &amp;#34;192.168.1.1&amp;#34; $dnsServers = &amp;#34;192.168.1.2&amp;#34;, &amp;#34;192.168.1.3&amp;#34; # Authorize the DHCP server in Active Directory Add-DhcpServerInDC -DnsName &amp;#34;DhcpServerName&amp;#34; # Add a new DHCP scope Add-DhcpServerv4Scope -Name $scopeName -StartRange $startRange -EndRange $endRange -SubnetMask $subnetMask # Optionally, set additional scope options like default gateway (Router) and DNS servers Set-DhcpServerv4OptionValue -ScopeId $startRange -Router $gateway Set-DhcpServerv4OptionValue -ScopeId $startRange -DnsServer $dnsServers # Note: # - Replace the IP addresses and subnet mask with values appropriate for your network.</description>
    </item>
    <item>
      <title>Configuring Windows Server With PowerShell</title>
      <link>https://gavinmassey.net/articles/2023/configuring-windows-server-with-powershell/</link>
      <pubDate>Tue, 19 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://gavinmassey.net/articles/2023/configuring-windows-server-with-powershell/</guid>
      <description>Rename-Computer -NewName &amp;#39;NewComputerName&amp;#39; Restart-Computer # It might be necessary to manually remove dhcp added ip configurations Remove-NetIPAddress -InterfaceAlias &amp;#39;Ethernet0&amp;#39; # Also you might have to remove the default gateway Remove-NetRoute -InterfaceAlias &amp;#39;Ethernet0&amp;#39; -NextHop 10.0.0.2 # Now you can add the new IP Address New-NetIPAddress ` -InterfaceAlias &amp;#39;Ethernet0&amp;#39; ` -IPAddress &amp;#39;10.0.77.101&amp;#39; ` -PrefixLength 24 ` -DefaultGateway &amp;#39;10.0.77.1&amp;#39; # You will also need to set the DNS address Set-DnsClientServerAddress ` -InterfaceAlias &amp;#39;Ethernet0&amp;#39; ` -ServerAddresses &amp;#39;10.</description>
    </item>
    <item>
      <title>Using PowerShell to Collect Computer Asset Information</title>
      <link>https://gavinmassey.net/articles/2023/using-powershell-to-collect-computer-asset-info/</link>
      <pubDate>Tue, 19 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://gavinmassey.net/articles/2023/using-powershell-to-collect-computer-asset-info/</guid>
      <description># Get computer system and BIOS information $ComputerSystem = Get-CimInstance -ClassName CIM_ComputerSystem $Bios = Get-CimInstance -ClassName CIM_BIOSElement # Check if the information was retrieved successfully if ($ComputerSystem -and $Bios) { # Build the results hashtable $Results = @{ &amp;#39;Computer Name&amp;#39; = $ComputerSystem.Name &amp;#39;Model&amp;#39; = $ComputerSystem.Model &amp;#39;Serial Number&amp;#39; = $Bios.SerialNumber } # Convert the hashtable to a custom PowerShell object $Report = [PSCustomObject]$Results # Clear the host (console) and display the report Clear-Host $Report | Format-Table -AutoSize } else { Write-Error &amp;#34;Failed to retrieve system or BIOS information.</description>
    </item>
  </channel>
</rss>
